services:
  coreBE:
    build: .
    container_name: MisaServerCoreBE
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=misauser
      - DB_PASSWORD=misauser123
      - DB_NAME=misaserverappdb
      - DB_SYNCHRONIZE=false
      - DB_SCHEMA=misacore_schema
      - JWT_SECRET=misaserverJWTkey123
      - KAFKA_HOST=kafka
      - PORT=5000
    depends_on:
      - db
    networks:
      - misa_network
    volumes:
      - /usr/src/app/node_modules
      - /etc/nginx/sites-available:/etc/nginx/sites-available


  db:
    image: postgres:16-alpine
    container_name: misa_postgres
    environment:
      - POSTGRES_USER=misauser
      - POSTGRES_PASSWORD=misauser123
      - POSTGRES_DB=misaserverappdb
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5433:5432"
    networks:
      - misa_network

  nginx:
    build: ./nginx
    container_name: nginx_reverse_proxy
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - misa_network

  MisaFiles:
    build: ../MisaFilesBE/
    container_name: MisaFilesBE
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=misauser
      - DB_PASSWORD=misauser123
      - DB_NAME=misaserverappdb
      - DB_SYNCHRONIZE=false
      - DB_SCHEMA=misaFiles_schema
      - JWT_SECRET=misaserverJWTkey123
      - KAFKA_HOST=kafka
      - PORT=5002
    depends_on:
      - db
    networks:
      - misa_network
    volumes:
      - /usr/src/app/node_modules

networks:
  misa_network:

volumes:
  db_data:
